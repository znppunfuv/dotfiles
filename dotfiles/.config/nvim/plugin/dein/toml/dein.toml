[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'haya14busa/dein-command.vim'
depends = ['dein.vim']

[[plugins]]
repo = 'farmergreg/vim-lastplace'
hook_add = '''
let g:lastplace_ignore = 'gitcommit,gitrebase,svn,hgcommit'
let g:lastplace_ignore_buftype = 'quickfix,nofile,help'
'''

[[plugins]]
repo = 'jiangmiao/auto-pairs'
hook_add = '''
aug AutoPairs
    au!
    au Filetype html let b:AutoPairs = AutoPairsDefine({ '<': '>' })
    au FileType rust let b:AutoPairs = AutoPairsDefine({ '\w\zs<': '>' })
aug END
'''

### Format ###
[[plugins]]
repo = 'editorconfig/editorconfig-vim'
hook_add = '''
let g:EditorConfig_exclude_patterns = ['gina://.*', 'scp://.*']
'''

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
xm ga <Plug>(EasyAlign)
nm ga <Plug>(EasyAlign)
'''

### Look and Feel ###
[[plugins]]
repo = 'lifepillar/vim-solarized8'
hook_add = '''
set background=dark
let g:solarized_termtrans = 1
'''

[[plugins]]
repo = 'itchyny/vim-cursorword'

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_guide_size = 1
let g:indent_guides_exclude_filetypes = [
    \ 'help',
    \ 'vista',
    \ 'vista_kind',
    \ 'vista_markdown',
    \ 'clap_grep',
    \ 'clap_input',
    \ 'clap_spinner',
    \ 'coc-explorer',
\ ]
'''

[[plugins]]
repo = 'rickhowe/diffchar.vim'
hook_add = '''
" 16 colors in fixed order
let g:DiffColors = 3
'''

[[plugins]]
repo = 'ryanoasis/vim-devicons'

### Normal mode util ###
[[plugins]]
repo = 'andymass/vim-matchup'

[[plugins]]
repo = 'machakann/vim-sandwich'

[[plugins]]
repo = 'scrooloose/nerdcommenter'
hook_add = '''
nmap <C-c> <Plug>NERDCommenterToggle
vmap <C-c> <Plug>NERDCommenterToggle
let g:NERDDefaultAlign = 'left'
let g:NERDTrimTrailingWhitespace = 1
" Add spaces after comment delimiters by default
let g:NERDSpaceDelims = 1
" Use compact syntax for prettified multi-line comments
let g:NERDCompactSexyComs = 1
'''

[[plugins]]
repo = 'simeji/winresizer'
hook_add = '''
let g:winresizer_vert_resize = 1
let g:winresizer_horiz_resize = 1
'''

[[plugins]]
repo = 'tyru/open-browser.vim'
hook_add = '''
" disable netrw's gx mapping
let g:netrw_nogx = 1
nm gx <Plug>(openbrowser-smart-search)
vm gx <Plug>(openbrowser-smart-search)
let g:openbrowser_default_search = 'duckduckgo'
'''

### Visual mode util ###
[[plugins]]
repo = 'terryma/vim-expand-region'
hook_add = '''
vmap v     <Plug>(expand_region_expand)
vmap <C-v> <Plug>(expand_region_shrink)
'''

### git ###
[[plugins]]
repo = 'lambdalisue/gina.vim'

[[plugins]]
repo = 'rhysd/committia.vim'
hook_add = '''
let g:committia_min_window_width = 120
'''

### Search ###
[[plugins]]
repo = 'easymotion/vim-easymotion'
depends = ['incsearch.vim', 'incsearch-fuzzy.vim', 'incsearch-easymotion.vim']
hook_add = '''
" Move to word
map <Leader>w <Plug>(easymotion-bd-w)
nm  <Leader>w <Plug>(easymotion-overwin-w)
" n-character search motion
map / <Plug>(easymotion-sn)
om  / <Plug>(easymotion-tn)
" Jump to next/previous match (even on next/previous page)
map n <Plug>(easymotion-next)
map N <Plug>(easymotion-prev)
" fuzzy-search
function! s:config_easyfuzzymotion(...) abort
    return extend(copy({
        \ 'converters': [incsearch#config#fuzzyword#converter()],
        \ 'modules': [incsearch#config#easymotion#module({ 'overwin': 1 })],
        \ 'keymap': {"\<CR>": '<Over>(easymotion)'},
        \ 'is_expr': 0,
        \ 'is_stay': 1
    \ }), get(a:, 1, {}))
endfunction
nmap <silent><expr> <Space>/ incsearch#go(<SID>config_easyfuzzymotion())

" Keep cursor column when JK motion
let g:EasyMotion_startofline = 0
" EasyMotion work similarly to Vim's smartcase option for global searches
let g:EasyMotion_smartcase = 1
" With this option set, v will match both v and V, but V will match V only
let g:EasyMotion_use_smartsign_us = 1
'''

[[plugins]]
repo = 'haya14busa/incsearch.vim'

[[plugins]]
repo = 'haya14busa/incsearch-fuzzy.vim'

[[plugins]]
repo = 'haya14busa/incsearch-easymotion.vim'
depends = ['incsearch.vim', 'vim-easymotion']
