[[plugins]]
repo = 'Shougo/vinarise.vim'
on_cmd = ['Vinarise']
hook_source = '''
let g:vinarise_enable_auto_detect = 1
'''

[[plugins]]
repo = 'othree/yajs.vim'
on_ft = ['javascript', 'javascriptreact']

[[plugins]]
repo = 'othree/es.next.syntax.vim'
on_ft = ['javascript', 'javascriptreact']

[[plugins]]
repo = 'HerringtonDarkholme/yats.vim'
on_ft = ['typescript', 'typescriptreact']

[[plugins]]
repo = 'styled-components/vim-styled-components'
on_ft = ['javascriptreact', 'typescriptreact']

[[plugins]]
repo = 'MaxMellon/vim-jsx-pretty'
on_ft = ['javascriptreact', 'typescriptreact']

[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = ['css', 'javascriptreact', 'typescriptreact']

[[plugins]]
repo = 'jparise/vim-graphql'
on_ft = ['prisma']
hook_add = '''
aug Prisma
    au!
    au BufRead,BufNewFile *.prisma set filetype=graphql
aug END
'''

[[plugins]]
repo = 'norcalli/nvim-colorizer.lua'
on_ft = ['css', 'html', 'javascriptreact', 'typescriptreact']
hook_source = '''
lua require'colorizer'.setup()
'''

[[plugins]]
repo = 'storyn26383/vim-vue'
on_ft = ['vue']

[[plugins]]
repo = 'lervag/vimtex'
on_ft = ['tex', 'plaintex']
hook_source = '''
let g:vimtex_compiler_progname = 'nvr'
let g:vimtex_compiler_method = 'tectonic'
let g:vimtex_compiler_tectonic = {
    \ 'backend' : 'nvim',
    \ 'background' : 1,
    \ 'build_dir' : '',
    \ 'options' : ['--keep-logs', '--synctex'],
\ }
let g:vimtex_complete_enabled = 0
let g:vimtex_imaps_enabled = 0
let g:vimtex_quickfix_enabled = 0
if has('mac')
    let g:vimtex_view_method = 'skim'
    " Doc: *vimtex-faq-skimviewer*
    exe '!defaults write -app Skim SKTeXEditorPreset -string ""'
    exe '!defaults write -app Skim SKTeXEditorCommand -string "nvr~"'
    exe '!defaults write -app Skim SKTeXEditorArguments -string "--remote +\"%line\" \"%file\"~"'
  " Doc: *vimtex-faq-wsl*
  elseif has('win32') || (has('unix') && exists('$WSLENV'))
    let g:vimtex_view_general_viewer = 'mupdf.exe'
  else
    let g:vimtex_view_method = 'mupdf'
fi
'''

[[plugins]]
repo = 'plasticboy/vim-markdown'
depends = ['tabular']
on_ft = ['markdown']
hook_source = '''
let g:vim_markdown_no_default_key_mappings = 1
let g:vim_markdown_folding_disabled = 1
let g:vim_markdown_math = 1
let g:vim_markdown_strikethrough = 1
'''

[[plugins]]
repo = 'godlygeek/tabular'
on_source = ['vim-markdown']

[[plugins]]
repo = 'mattn/vim-maketable'
on_ft = ['markdown']

[[plugins]]
repo = 'yasuhiroki/github-actions-yaml.vim'
on_ft = ['yml']
hook_add = '''
aug GitHubActions
    au!
    au BufRead,BufNewFile .github/workflows/*.yml set filetype=yml.gha
aug END
'''

[[plugins]]
repo = 'pantharshit00/vim-prisma'
on_ft = ['prisma']

[[plugins]]
repo = 'pearofducks/ansible-vim'
on_ft = ['yml']
hook_add = '''
aug Ansible
    au!
    au BufRead,BufNewFile */playbooks/*.yml set filetype=yaml.ansible
aug END
'''
hook_source = '''
let g:ansible_extra_keywords_highlight = 1
'''

[[plugins]]
repo = 'hashivim/vim-terraform'
on_ft = ['terraform']
hook_source = '''
let g:terraform_fmt_on_save = 1
'''

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

[[plugins]]
repo = 'chrisbra/csv.vim'
on_ft = ['csv']

[[plugins]]
repo = 'Shougo/context_filetype.vim'
on_ft = ['markdown', 'toml', 'html']

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']
on_source = ['context_filetype.vim']
