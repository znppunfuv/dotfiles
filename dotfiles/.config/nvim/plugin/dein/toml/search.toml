[[plugins]]
repo = 'easymotion/vim-easymotion'
depends = [
    'incsearch.vim',
    'incsearch-fuzzy.vim',
    'incsearch-easymotion.vim'
]
hook_add = '''
" Move to word
map <Leader>w <Plug>(easymotion-bd-w)
nm  <Leader>w <Plug>(easymotion-overwin-w)
" n-character search motion
map / <Plug>(easymotion-sn)
om  / <Plug>(easymotion-tn)
" Jump to next/previous match (even on next/previous page)
map n <Plug>(easymotion-next)
map N <Plug>(easymotion-prev)
" fuzzy-search
function! s:config_easyfuzzymotion(...) abort
    return extend(copy({
        \ 'converters': [incsearch#config#fuzzyword#converter()],
        \ 'modules': [incsearch#config#easymotion#module({ 'overwin': 1 })],
        \ 'keymap': {"\<CR>": '<Over>(easymotion)'},
        \ 'is_expr': 0,
        \ 'is_stay': 1
    \ }), get(a:, 1, {}))
endfunction
nmap <silent><expr> <Space>/ incsearch#go(<SID>config_easyfuzzymotion())

" Keep cursor column when JK motion
let g:EasyMotion_startofline = 0
" EasyMotion work similarly to Vim's smartcase option for global searches
let g:EasyMotion_smartcase = 1
" With this option set, v will match both v and V, but V will match V only
let g:EasyMotion_use_smartsign_us = 1
'''

[[plugins]]
repo = 'haya14busa/incsearch.vim'

[[plugins]]
repo = 'haya14busa/incsearch-fuzzy.vim'

[[plugins]]
repo = 'haya14busa/incsearch-easymotion.vim'
depends = ['incsearch.vim', 'vim-easymotion']
