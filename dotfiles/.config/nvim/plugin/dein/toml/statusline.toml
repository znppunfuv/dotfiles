[[plugins]]
repo = 'itchyny/lightline.vim'
depend = ['vim-devicons', 'coc.nvim', 'gina.vim']
hook_add = '''
" Statusline
let g:lightline = {
    \ 'colorscheme': 'solarized',
    \ 'active': {
        \ 'left': [
            \ ['mode', 'paste'],
            \ ['branch', 'filename'],
            \ ['cocstatus'],
        \ ],
        \ 'right': [
            \ ['lineinfo'],
            \ ['percent'],
            \ ['fileformat', 'fileencoding', 'filetype'],
            \ ['blame'],
        \ ],
    \ },
    \ 'component_function': {
        \ 'mode':         'LightlineMode',
        \ 'branch':       'LightlineBranchName',
        \ 'filename':     'LightlineFilename',
        \ 'lineinfo':     'LightLineLineInfo',
        \ 'percent':      'LightLinePercent',
        \ 'fileformat':   'LightlineFileformat',
        \ 'fileencoding': 'LightlineFileencoding',
        \ 'filetype':     'LightlineFiletype',
        \ 'cocstatus':    'coc#status',
        \ 'blame':        'LightlineGitBlame',
    \ },
    \ 'separator': { 'left' : '', 'right': '' },
    \ 'subseparator': { 'left' : '', 'right': '' },
\ }

" Mode
function! LightlineMode()
    let l:fname = expand('%:t')
    return l:fname =~ '__vista__'      ? 'Vista.vim'
        \ :  l:fname =~ 'coc-explorer' ? 'coc-explorer'
        \ :  winwidth(0) > 60          ? lightline#mode()
        \ :  ''
endfunction

" Branch name
function! LightlineBranchName()
    if expand('%:t') !~ '\(__vista__\|coc-explorer\)'
        let l:mark   = ' '
        let l:branch = gina#component#repo#branch()
        return l:branch !=# '' ? l:mark . l:branch : ''
    endif
    return ''
endfunction

" Filename
function! LightlineReadonly()
    return &ft !~? 'help' && &readonly ? '' : ''
endfunction
function! LightlineModified()
    return &ft =~ 'help' ? ''
        \ :  &modified   ? '+'
        \ :  &modifiable ? ''
        \ :  '-'
endfunction
function! LightlineFilename()
    let l:fname = expand('%:t')
    return l:fname =~ '\(__vista__\|coc-explorer\)' ? ''
        \ : ('' != LightlineReadonly() ? LightlineReadonly() . ' ' : '')
            \ . ('' != l:fname ? l:fname : '[No Name]')
            \ . ('' != LightlineModified() ? ' ' . LightlineModified() : '')
endfunction

" Line info
function! LightLineLineInfo()
    return expand('%:t') =~ '\(__vista__\|coc-explorer\)' ? '' :  ' ' . line('.') . ':' . col('.')
endfunction

" Line percent
function! LightLinePercent()
    return expand('%:t') =~ '\(__vista__\|coc-explorer\)' ? '' :  line('.') * 100 / line('$') . '%'
endfunction

" File format
function! LightlineFileformat()
    return winwidth(0) > 70 ? (&fileformat . ' ' . WebDevIconsGetFileFormatSymbol()) : ''
endfunction

" File encoding
function! LightlineFileencoding()
    return winwidth(0) > 70 ? (&fenc !=# '' ? &fenc : &enc) : ''
endfunction

" File type
function! LightlineFiletype()
    return winwidth(0) > 70
      \ ? (strlen(&filetype) ? &filetype . ' ' . WebDevIconsGetFileTypeSymbol() : 'no ft') : ''
endfunction

" coc-vim
function! LightlineGitBlame() abort
  let blame = get(b:, 'coc_git_blame', '')
  return winwidth(0) > 120 ? blame : ''
endfunction
'''
